. this

: 멤버 변수에서 사용되는 this

: this는 현재 사용하고 있는 객체를 지시할때 사용하며
  객체가 생성되면서 자동으로 만들어지는 객체참조형 변수임
  자기 자신의 객체를 참조할때 사용하고 클래스의 멤버 변수, 생성자에서 사용
  
  		형식
  		
  		1. this   : 객체 자신을 참조하는 레퍼런스 
  		2. this() : 자신의 생성자 메소드
  		
  		
  this , this() 는 객체 자신의 멤버를 참조하기 위해 사용
  
  
. Garbage Collection(쓰레기 수집 : 가베지 콜렉션)

 : 프로그램에서 쓰레기는 사용하지 않는 메모리 공간을 의미
   new 명령어로 객체를 사용하기 위한 메모리를 할당 받은 이후
    그 공간을 더 이상 사용하지 않으면 낭비되는 공간이 되고 맘
    
    C++은 new 키워드를 사용해 객체를 생성하고, 객체 사용이 끝나면
    delete 키워드를 사용해 Heap공간에 할당된 메모리를 해체함
    
    객체를 만드는 과정을 생성자, 제거하는 과정을 소멸자라고 함
    하지만 자바에선 소멸자 존재x
    
    자바는 Java Virtual Machine(JVM : 자바 가상 머신) 이
    쓰지않는 메모리를 찾아 자동으로 제거 해줌
    
    자바에서 쓰레기 수집을 수행하는 시기는 정확하게 언제라고 정해져있진 않음
    프로그램이 무언가를 바쁘게 처리하지 않을때
    메모리에 쓰레기가 많이 쌓였을때와 같은 시기를 선택하여 처리
    자바에서 프로그램이 사용하는 메모리는 JVM이 모두 관리함
    JVM 내에서 수행되는 Garbage Collection 동작은 제일 낮은
    우선순위의 Thread 입니다.
    
    
    
    . Inner Class(내부 클래스)
	  
	  : 클래스는 필드(변수)와 메소드를 멤버로 갖음
	    그런데 클래스를 멤버로 가질수도 있음
	    새롭게 만들어진 클래스를 클래스의 맴버로 품을 수 있음
	    
	    이와같은 클래스를 내부클래스라고 함
	    이러한 내부 클래스를 사용하는 이유는 서로 다른 클래스 사이에는
	    일정한 제한 관계가 있기 때문. 다른 클래스에 있는 
	    맴버에 접근하려면 접근 지정자에 의해 접근이 어려울수 있음
	    이때 내부 클래스를 사용하면 그러한 제한이 사라지기 때문에
	    클래스 사이의 데이터 교환이 쉬워짐
	    클래스 안에서 선언된 클래스도 클래스의 맴버이기 때문에
	    접근제한이 없음
	    
	    
	    	. 종류
	    	
	    Nested Class(중첩 클래스):
	    			내부 클래스가 static 로 선언된 정적 클래스
	    			
	    Member Class(맴버 클래스):
	    			내부 클래스가 static가 붙지 않는 비 정적 클래스
	    			
	    Local Class(지역 클래스 = 어나니머스 클래스):
	    			메소드 블럭내부에서 선언된 클래스 (이벤트 처리 시에 많이 씀)    
    
